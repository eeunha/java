package com.test.java.obj;

//2023.07.31
public class Ex36_Class {
	public static void main(String[] args) {
		// Ex36_Class.java

		// 언어의 성향
		// 1. 절차 지향 프로그래밍
		// 2. 함수 지향 프로그래밍
		// 3. 객체 지향 프로그래밍

		// 자바
		// - 객체 지향 프로그래밍 언어, Object Oriented Programming
		// - OOP
		// - 객체를 선호하는 프로그래밍 방식의 언어

		// 클래스, Class
		// 1. 객체, Object
		// - 사전적인 정의로 실제 존재하는 것을 말한다.
		// - 객체지향 이론에서는 사물과 같은 유형적인 것뿐만 아니라, 개념이나 논리와 같은 무형적인 것들도 객체로 간주한다.
		// - 맥도날드 > 모든 주문 > 직원
		// > 키오스크

		// 2. 클래스, Class
		// - 객체를 분류하는 단위
		// - 객체를 생성하는 단위

		// ex) 붕어빵, 붕어빵틀
		// a. 붕어빵틀을 만든다. > 클래스
		// b. a를 사용해서 붕어빵을 만든다. > 객체
		// c. 붕어빵을 먹는다.

		// ex) 핸드폰
		// a. 설계도를 만든다. > 핸드폰틀을 만든다.
		// b. a를 사용해서 핸드폰을 만든다.
		// c. 핸드폰을 사용한다.

		// 3. 인스턴스, Instance
		// - 객체
		// - 객체 == 인스턴스
		// - 객체 != 인스턴스
		// - 메모리에 실체화된 객체
		// 일단 비슷하게 생각하자.

		// 4. 캡슐화, 정보은닉
		// - 객체의 내부를 외부로부터 보호하기 위한 장치

		// 5. 인터페이스, Interface
		// - 캡슐화된 내부와 외부간의 최소한의 연결이 가능한 통로 역할
		// ex) 게임 인터페이스

		// 객체 = 데이터 + 행동 의 집합
		
		// 리모콘 = 데이터(회색, 100g, 8cmX17cm ...) + 행동(전원 On, 전원 Off, 배터리를 넣는다, 배터리를 뺀다 ...)
		
		// 홍길동 = 데이터(나이, 몸무게, 피부색깔, 머리색 ...) + 행동(말한다, 먹는다, 잔다, 달린다, 생각한다 ...)
		
		// 6. 프로퍼티
		// - 객체가 가지는 정보(데이터)

		// 7. 행동
		// - 객체가 가지는 행동

		//
		
		// 8. 상속
		// - 
		// - 
		// - 
		// - 

	}// main
}
